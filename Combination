class Solution {
public:
void help(vector<int>& candidates, int target,vector<vector<int>>& ans,int index,vector<int>& ds) {
   
   //base case
   if(index == candidates.size()) {
       if(target==0) {
           ans.push_back(ds);
       }
  //pick
  return;
   }
   if(candidates[index] <= target) {
       ds.push_back(candidates[index]);
       help(candidates,target-candidates[index],ans,index,ds);
       ds.pop_back();
   }
   //not pick
   help(candidates,target,ans,index+1,ds);

    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> v;
        help(candidates,target,ans,0,v);
        return ans;
    }
};
